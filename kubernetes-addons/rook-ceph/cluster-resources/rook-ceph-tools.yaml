# ====================================================================
#  [최종 수정본] initContainer를 사용하여 ceph.conf와 keyring을
#  자동으로 완벽하게 생성하도록 수정한 버전입니다.
# ====================================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-ceph-tools
  namespace: rook-ceph
  labels:
    app: rook-ceph-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-ceph-tools
  template:
    metadata:
      labels:
        app: rook-ceph-tools
    spec:
      dnsPolicy: ClusterFirst
      # [중요] 올바른 ServiceAccount를 사용합니다.
      serviceAccountName: rook-ceph-tools
      containers:
      - name: rook-ceph-tools
        # 클러스터와 동일한 버전의 ceph 이미지를 사용합니다.
        image: quay.io/ceph/ceph:v18.2.7
        # 메인 컨테이너는 접속 대기를 위해 무한히 실행합니다.
        command: ["/bin/sleep", "infinity"]
        volumeMounts:
          # initContainer가 생성한 설정 파일들을 /etc/ceph 디렉터리에 마운트합니다.
          - name: ceph-config
            mountPath: /etc/ceph
      initContainers:
      - name: init-ceph-config
        image: quay.io/ceph/ceph:v18.2.7
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          # 1. ConfigMap에서 mon 엔드포인트와 fsid를 가져옵니다.
          MON_ENDPOINTS=$(cat /etc/rook-config/mon-endpoints)
          FSID=$(cat /etc/rook-config/fsid)

          # 2. Secret에서 admin key를 가져옵니다.
          ADMIN_KEY=$(cat /etc/rook-secret/key)

          # 3. fsid를 포함한 완전한 ceph.conf 파일을 생성합니다.
          cat << EOF > /etc/ceph-out/ceph.conf
          [global]
          fsid = ${FSID}
          mon_host = ${MON_ENDPOINTS}
          EOF

          # 4. ceph.client.admin.keyring 파일을 생성합니다.
          cat << EOF > /etc/ceph-out/ceph.client.admin.keyring
          [client.admin]
          key = ${ADMIN_KEY}
          caps mds = "allow *"
          caps mon = "allow *"
          caps osd = "allow *"
          caps mgr = "allow *"
          EOF
        volumeMounts:
          # 생성된 설정 파일을 공유 볼륨(/etc/ceph-out)에 저장합니다.
          - name: ceph-config
            mountPath: /etc/ceph-out
          # mon 엔드포인트 정보가 담긴 ConfigMap을 마운트합니다.
          - name: mon-endpoints
            mountPath: /etc/rook-config
          # admin key가 담긴 Secret을 마운트합니다.
          - name: admin-secret
            mountPath: /etc/rook-secret
      volumes:
        # initContainer와 mainContainer가 설정 파일을 공유하기 위한 볼륨입니다.
        - name: ceph-config
          emptyDir: {}
        # mon 엔드포인트와 fsid가 담긴 정확한 ConfigMap을 참조합니다.
        - name: mon-endpoints
          configMap:
            name: rook-ceph-mon-endpoints
            items:
              - key: data
                path: mon-endpoints
              - key: fsid
                path: fsid
        # 관리자 키가 담긴 정확한 Secret을 참조합니다.
        - name: admin-secret
          secret:
            secretName: rook-ceph-admin-keyring
            items:
              - key: keyring
                path: key
      # 모든 노드에 배포될 수 있도록 Toleration을 추가합니다.
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
